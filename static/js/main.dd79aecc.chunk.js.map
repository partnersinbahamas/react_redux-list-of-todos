{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","features/currentUser.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialValue","query","status","value","filterReducer","todos","todosReducer","user","currentUserReducer","rootReducer","combineReducers","currentTodo","filter","currentUser","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","id","title","completed","dispatch","className","onClick","currentTodoActions","TodoList","length","map","TodoFilter","onSubmit","event","preventDefault","onChange","filterActions","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","isLoader","setIsLoader","loadUserData","a","loadedDataUser","currentUserActions","Error","useEffect","href","email","name","App","lowerQuery","toLowerCase","visibleTodos","setVisibleTodos","getData","loadedData","todosActions","data","includes","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd79aecc.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export type StatusTypes = 'all' | 'active' | 'completed';\n\ntype Filter = {\n  query: string,\n  status: StatusTypes;\n};\n\ntype SetQueryType = {\n  type: 'query/SET',\n  payload: string,\n};\n\ntype SetStatusType = {\n  type: 'status/SET',\n  payload: StatusTypes,\n};\n\ntype Action = SetQueryType | SetStatusType;\n\nconst setQuery = (value: string): SetQueryType => (\n  { type: 'query/SET', payload: value }\n);\n\nconst setStatus = (status: StatusTypes): SetStatusType => (\n  { type: 'status/SET', payload: status }\n);\n\nconst initialValue: Filter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: Filter = initialValue,\n  action: Action,\n): Filter => {\n  switch (action.type) {\n    case 'query/SET':\n      return { ...state, query: action.payload };\n\n    case 'status/SET':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setQuery, setStatus };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype GetTodosActions = {\n  type: 'todos/GET',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): GetTodosActions => (\n  { type: 'todos/GET', payload: todos }\n);\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos: Todo[] = [], action: GetTodosActions): Todo[] => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { User } from '../types/User';\n\ntype SetUser = {\n  type: 'user/SET',\n  payload: User,\n};\n\ntype RemoveUser = {\n  type: 'user/REMOVE',\n};\n\nconst setUser = (user: User): SetUser => ({ type: 'user/SET', payload: user });\nconst removeUser = (): RemoveUser => ({ type: 'user/REMOVE' });\n\ntype Action = SetUser | RemoveUser;\n\nconst currentUserReducer = (state = {}, action: Action) => {\n  switch (action.type) {\n    case 'user/SET':\n      return action.payload;\n\n    case 'user/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setUser, removeUser };\n\nexport default currentUserReducer;\n","// eslint-disable import/no-named-as-default\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport currentUserReducer from '../features/currentUser';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  currentUser: currentUserReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={`has-text-${completed ? 'success' : 'danger'}`}>\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i className={`far fa-eye${currentTodo?.id === id ? '-slash' : ''}`} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const { query } = useAppSelector(state => state.filter);\n\n  return (\n    <>\n      {!todos.length && query ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n\n            {todos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { actions as filterActions, StatusTypes } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => dispatch(\n              filterActions.setStatus(event.target.value as StatusTypes),\n            )}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => (\n            dispatch(filterActions.setQuery(event.target.value)))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentUserActions } from '../../features/currentUser';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const {\n    title, id, completed, userId,\n  } = todo;\n  const [isLoader, setIsLoader] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const currentUser: User = useAppSelector(state => state.currentUser);\n\n  const loadUserData = async () => {\n    try {\n      setIsLoader(true);\n      const loadedDataUser = await getUser(userId);\n\n      dispatch(currentUserActions.setUser(loadedDataUser));\n    } catch (error) {\n      throw Error('Failed to load user data');\n    } finally {\n      setIsLoader(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUserData();\n  }, []);\n\n  const onModalRemove = () => {\n    dispatch(currentUserActions.removeUser());\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalRemove}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser ? currentUser.name : 'User'}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoader, setIsLoader] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { status, query } = useAppSelector(state => state.filter);\n\n  const lowerQuery = query.toLowerCase();\n\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  const getData = async () => {\n    try {\n      setIsLoader(true);\n      const loadedData = await getTodos();\n\n      dispatch(todosActions.setTodos(loadedData));\n      setVisibleTodos(loadedData);\n    } catch (error) {\n      throw Error('Field to load todo data');\n    } finally {\n      setIsLoader(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    switch (status) {\n      case 'active':\n        setVisibleTodos([...todos].filter((data) => !data.completed));\n        break;\n\n      case 'completed':\n        setVisibleTodos([...todos].filter((data) => data.completed));\n        break;\n\n      default:\n        setVisibleTodos(todos);\n        break;\n    }\n\n    if (query.length) {\n      setVisibleTodos([...todos].filter((data) => {\n        const lowerTitle = data.title.toLowerCase();\n\n        return lowerTitle.includes(lowerQuery);\n      }));\n    }\n  }, [status, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoader ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal todo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}